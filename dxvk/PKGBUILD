pkgbase=dxvk-async-git
pkgname=('dxvk-async-git')
pkgver=2.1.r59.g6b779206
pkgrel=1
pkgdesc="A Vulkan-based compatibility layer for Direct3D 9/10/11 which allows running 3D applications on Linux using Wine. Windows DLL version)"
arch=('x86_64')
url="https://gitlab.com/Ph42oN/dxvk-gplasync/"
license=('zlib/libpng')
depends=('vulkan-icd-loader' 'wine>=4.0rc1' 'lib32-vulkan-icd-loader')
provides=("dxvk" "d9vk" "dxvk=$pkgver")
makedepends=('ninja' 'meson>=0.43' 'glslang' 'mingw-w64-gcc' 'git' 'wine')
conflicts=('d9vk-mingw-git' 'd9vk-bin' 'd9vk-winelib-git' "dxvk-bin" "dxvk-git" "dxvk-wine32-git" "dxvk-wine64-git" "dxvk-win32-git" "dxvk-win64-git" "dxvk-winelib-git" "dxvk-mingw-git")
options=(!strip !buildflags staticlibs)
source=("git+https://github.com/doitsujin/dxvk.git"
        "git+https://github.com/Joshua-Ashton/mingw-directx-headers.git"
        "git+https://github.com/KhronosGroup/Vulkan-Headers.git"
        "git+https://github.com/KhronosGroup/SPIRV-Headers.git"
        "git+https://gitlab.com/Ph42oN/dxvk-gplasync.git"
        "dxvk-async-env.conf::https://aur.archlinux.org/cgit/aur.git/plain/dxvk-async-env.conf?h=dxvk-async-git"
        "setup_dxvk.sh::https://aur.archlinux.org/cgit/aur.git/plain/setup_dxvk.sh?h=dxvk-async-git")
sha256sums=('SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            'SKIP'
            '5ea0fbf7fddb45a8575ff001793011a594d999aaeb66ef95378bca950c844300'
            '0f688815530ab5e8cc89b9b45d9b1d66cd8cd5a7770fb8249339af555a30dfe7')

pkgver() {
    cd dxvk
    git describe --long --tags | sed 's/\([^-]*-g\)/r\1/;s/-/./g;s/v//g'
}

prepare() {
    cd "${srcdir}/dxvk/"

    git submodule init include/{native/directx,vulkan,spirv}
    git config submodule.include/native/directx.url "$srcdir/mingw-directx-headers"
    git config submodule.include/vulkan.url "$srcdir/Vulkan-Headers"
    git config submodule.include/spirv.url "$srcdir/SPIRV-Headers"
    git -c protocol.file.allow=always submodule update include/{native/directx,vulkan,spirv}

    patch --forward --strip=1 --input="${srcdir}/dxvk-gplasync/dxvk-gplasync-2.1-3.patch"
}

build() {

    export _isl="-ftree-loop-linear -floop-strip-mine -floop-block"
    export _smal="-fira-hoist-pressure -fira-loop-pressure -fmodulo-sched -fmodulo-sched-allow-regmoves"
    export _virtual="-fdevirtualize-speculatively -fdevirtualize-at-ltrans"
    export _limit="-fipa-strict-aliasing -flimit-function-alignment"
    export _loop="-ftree-loop-ivcanon -ftree-loop-if-convert -floop-unroll-and-jam -fpredictive-commoning -fsplit-paths  -fgcse-lm -fgcse-sm -fivopts -flive-range-shrinkage -ftree-loop-ivcanon -funswitch-loops -ftree-loop-im -floop-interchange -floop-nest-optimize -ftree-loop-distribution"
    export _flags="-fstdarg-opt -fuse-linker-plugin -ftree-vectorize -fdata-sections -ffunction-sections -mfpmath=sse -fgraphite-identity"
    export _cxx="-fdeclone-ctor-dtor"
    export CPPFLAGS="-D_FORTIFY_SOURCE=2"
    export CFLAGS="-fsched-pressure -march=x86-64-v3 -O2 -pipe -Wformat -Werror=format-security -fstack-clash-protection -fcf-protection $_limit $_smal $_isl $_loop $_flags $_virtual"
    export CXXFLAGS="$CFLAGS $_cxx"
    export LDFLAGS="-Wl,-O4,--sort-common,--gc-sections,--no-as-needed,-z,relro,-z,now"

    meson setup dxvk "build/x64" \
        --cross-file dxvk/build-win64.txt \
        --prefix "/usr/share/dxvk/x64" \
        --bindir "" --libdir "" \
        --buildtype "release" \
        --strip
    ninja -C "build/x64"

    meson setup dxvk "build/x32" \
        --cross-file dxvk/build-win32.txt \
        --prefix "/usr/share/dxvk/x32" \
        --bindir "" --libdir "" \
        --buildtype "release" \
        --strip
    ninja -C "build/x32"
}

package_dxvk-async-git() {
        arch=('x86_64')
        conflicts=("dxvk-bin" "dxvk-mingw-git")
        DESTDIR="$pkgdir" ninja -C "build/x32" install
        DESTDIR="$pkgdir" ninja -C "build/x64" install
        install -Dm 644 "$srcdir/setup_dxvk.sh" "$pkgdir/usr/share/dxvk/setup_dxvk.sh"
        mkdir -p "$pkgdir/usr/bin"
        ln -s /usr/share/dxvk/setup_dxvk.sh "$pkgdir/usr/bin/setup_dxvk"
        chmod +x "$pkgdir/usr/share/dxvk/setup_dxvk.sh"
        # Async environment variable
        install -Dm644 "$srcdir/dxvk-async-env.conf" "$pkgdir/etc/environment.d/dxvk-async-env.conf"
}