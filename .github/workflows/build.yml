name: Builder
on:
  push:
  workflow_dispatch:
jobs:

  # build_spotify_adblock_git:
  #   runs-on: ubuntu-latest
  #   container: archlinux:latest
  #   steps:
  #     - run: pacman -Syu --noconfirm --needed git
  #     - uses: actions/checkout@v2.3.5
  #       # with:
  #       #   submodules: true
  #       #   fetch-depth: '50'
  #       #   token: ${{ secrets.GITHUB_TOKEN }}
  #     - id: makepkg
  #       uses: JPratama7/pkgbuild-action@toolchain
  #       with:
  #         makepkgArgs: "--skippgpcheck"
  #         pkgdir: "llvm"

  #     - uses: ncipollo/release-action@v1.8.10
  #       with:
  #         allowUpdates: true
  #         tag: "latest"
  #         artifacts: "*/*.zst"
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #     - uses: actions/upload-artifact@v2
  #       with:
  #         path: "*/*.zst"

  python:
    strategy:
      matrix:
        build: [
          linux-2
          ]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      # - name: Maximize build space
      #   uses: AdityaGarg8/remove-unwanted-software@v4.1
      #   with:
      #     remove-android: 'true'
      #     remove-dotnet: 'true'
      #     remove-haskell: 'true'
      #     remove-cached-tools: 'true'
      #     remove-large-packages: 'true'
      #     remove-codeql: 'true'
      # - name: Build
      #   run: |
      #     echo "Free space:"
      #     df -h

      - name: Clone
        uses: actions/checkout@v3
        # with:
          # repository: h0tc0d3/arch-packages
          # repository: JPratama7/arch-builder
          # repository: sarcasticadmin/empty-repo
          # repository: archlinux/svntogit-packages
          # ref: packages/${{ matrix.build }}
      # - run: 
      #     pacman -Syu --noconfirm --needed git
      #     cat /etc/makepkg.conf
        # with:
        #   repository: JPratama7/arch-builder
          
      # - uses: webiny/action-post-run@2.0.1
      #   id: post-run-command
      #   with:
      #     run: cat xf86-video-amdgpu/src/xf86-video-amdgpu-22.0.0/config.log
      # - run : | 
      #     git clone https://github.com/pyston/pyston.git
      #     cd pyston
      #     git describe --tags
      #     ls
        # with:
        #   submodules: true
        #   fetch-depth: '50'
        #   token: ${{ secrets.GITHUB_TOKEN }}
      # - run: |
      #     cd ${{ matrix.build }} && sed -i 's/+llvm/llvm-all/g' PKGBUILD
      # - run: |
      #     export CFLAGS="${CFLAGS/-O2/-O3}"
      #     export CFLAGS="${CFLAGS/-march=x86-64/-march=x86-64-v2}"
      #     export LDFLAGS="${LDFLAGS} -fuse-ld=lld"
      # - name: remove +clang
      #   run: |
      #     cd ${{ matrix.build }} && sed -i 's/+clang//g' PKGBUILD
      # - run: ls -alR
      - id: makepkg
        uses: JPratama7/pkgbuild-action@original
        with:
          clanged: "y"
          clangedpflags: "y"
          clangedPolly: "y"
          # bootstrap: "y"
          # officialRepo: "y"
          # gccPFlags: "y"
          namcapDisable: true
          makepkgArgs: "--skippgpcheck --skipchecksums"
          pkgdir:  ${{ matrix.build }}
          ldflags: "-Wl,-z,nostart-stop-gc"
          rustcflags: "-C link-arg=-Wl,-z,nostart-stop-gc"
          # cflags: "-Xclang -load -Xclang LLVMPolly.so"
          # cxxflags: "-Xclang -load -Xclang LLVMPolly.so"
          # rustcflags: "-C link-arg=-Wl,-z,nostart-stop-gc"
        # uses: JPratama7/pkgbuild-action@test-toolchain
        # with:
        #   namcapDisable: true
        #   makepkgArgs: "--skippgpcheck --skipchecksums"
          # pkgdir:  trunk
        # uses: JPratama7/build-aur-action@testing
        # with:
        #   repo-name: ${{ matrix.build }}
      # - uses: DuckSoft/build-aur-action@master
      #   with:
      #     repo-name: ${{ matrix.build }}
      - uses: ncipollo/release-action@v1.8.10
        with:
          allowUpdates: true
          tag: "ok"
          artifacts: "*/*.zst"
          token: ${{ secrets.GITHUB_TOKEN }}
      
  # create_db_file:
  #   runs-on: ubuntu-latest
  #   container: archlinux:latest
  #   steps:
  #     - name: Download artifact
  #       run: |
  #         cat << EOM >> /etc/pacman.conf
  #         [jp7-arch]
  #         SigLevel = Never
  #         Server = https://r.zhullyb.top/https://github.com/JPratama7/arch-builder/releases/download/latest/
  #         Server = https://github.com/JPratama7/arch-builder/releases/download/latest/
  #         Server = https://git.aya1.top/JPratama7/arch-builder/releases/download/latest/
  #         Server = https://hub.fastgit.xyz/JPratama7/arch-builder/releases/download/latest/
  #         EOM
  #         pacman -Syy --noconfirm fmt openssl rapidjson cmake base-devel wget git llvm-all python nodejs-lts-gallium
  #         git clone -b linux https://notabug.org/doublesine/navicat-keygen.git navicat
  #         cd navicat
  #         wget https://raw.githubusercontent.com/JPratama7/pkgbuild-action/toolchain/makepkg.conf
  #         mv makepkg.conf /etc/makepkg.conf
  #         mkdir build
  #         cd build
  #         cmake -DCMAKE_BUILD_TYPE=Release ..
  #         cmake --build . -- -j9
  #         ls -aRl
  #     - uses: ncipollo/release-action@v1.8.10
  #       with:
  #         allowUpdates: true
  #         replacesArtifacts: true
  #         tag: "latest"
  #         artifacts: "navicat/build/navicat-*"
  #         token: ${{ secrets.GITHUB_TOKEN }}

